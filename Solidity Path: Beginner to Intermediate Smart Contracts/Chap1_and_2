// How Zombie DNA works:
// State variables are permanently stored in contract storage. 
// This means they're written to the Ethereum blockchain. Think of them like writing to a DB.

Chapter 2: Contracts

/* 

Solidity's code is encapsulated in contracts. A contract is the fundamental building 
block of Ethereum applications — all variables and functions belong to a contract, and this 
will be the starting point of all your projects.

An empty contract named HelloWorld would look like this

*/

contract HelloWorld {

}

/* 
Version Pragma
All solidity source code should start with a "version pragma" — a declaration of the version of the Solidity 
compiler this code should use. This is to prevent issues with future compiler versions potentially introducing changes 
that would break your code.

It looks like this: pragma solidity ^0.4.25; (for the latest solidity version at the time of this writing, 0.4.25).

Putting it together, here is a bare-bones starting contract — the first thing you'll write every time you start 
a new project

*/

pragma solidity ^0.4.25;
contract ZombieFactory {
}
